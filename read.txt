https://blog.csdn.net/dengqiang123456/article/list/1?t=1

2 简单的三个：eurekaServer、provider、consumer

4 info自定义， 指定环境，指定数据中心，关闭自我保护模式，设置清理无效节点的时间间隔

5 多个eurekaServer集群

6.启用Ribbon负载均衡，多个provider:Ribbon 通过@LoadBalanced 进行负载均衡,通过RestTemplate来consumer调用provider

8 负载均衡-Ribbon 的负载均衡策略,provider provider provider2
 在consumer通过不同url选择
    private static final String URL="http://spring-cloud-provider/api/user/{id}";
 	private static final String URL2="http://spring-cloud-provider2/api/user/{id}";
 	在provider找那中：spring.application.name=spring-cloud-provider   spring.application.name=spring-cloud-provider2

9 对负载均衡策略进行扩展,在consumer 自定义策略 spring-cloud-provider.ribbon.NFLoadBalancerRuleClassName

10 声明式 REST 客户端-Feign 的使用,在consumer ConsumerApplication中@EnableFeignClients
  @FeignClient(value = "spring-cloud-provider")
  interface IUserBiz
  方法中加入@RequestMapping(value  和Controller类似
  原来：RestTemplate方式调用远程服务

11 声明式 REST 客户端-Feign 的各种调用，将interface IUserBiz抽离出来到新的一个工程（api工程），将接口单独抽离出来，支持更多的接口

12 声明式 REST 客户端-Feign 的高级特性，将UserService放到bean，consumer，provider同时使用这个service（consumer通过api）
    在consumer feign开启压缩等配置,FeignClient启用RcFeignConfiguration

13 pring Cloud包管理：io.spring.platform

14 断路器-Hystrix，在consumer @EnableCircuitBreaker  @HystrixCommand(fallbackMethod = "getFallback")

16 断路器-Hystrix 的隔离策略，在consumer @HystrixCommand(fallbackMethod = "getFallback", commandProperties = @HystrixProperty(name = HystrixPropertiesManager.EXECUTION_ISOLATION_STRATEGY, value = "SEMAPHORE"))

17 断路器-Hystrix 对 Feign 的支持，FeignClient的RcFeignConfiguration配置更加丰富，fallback配到FeignClient，自定义的fallback配置断路器（原来的是配到consumer的Controller层），consumer：feign里面配置hystrix

18 断路器-Hystrix Dashboard 的使用，fallback配到FeignClient,断路器的一些配置，在EurekaServer中加上@EnableHystrixDashboard，熔断监控Hystrix

19 断路器-Turbine 的使用，在consumer配置元数据eureka.instance.metadata-map.cluster，turbine断路器










坑：
org.gradle.api.artifacts.ProjectDependency.getConfiguration()Ljava/lang/String;
升级 springBootVersion到1.5.2
